;/************************************
;     This program is created by
;        Mehrbod Molla Kazemi
;  Copyright(C) 2022 - 7 Mordad 1401
;*************************************/
;// File:        ks0108_mmk.h
;// Creator:     Mehrbod M.K.
;// Date:        7 Mordad 1401
;
;// Primary includes.
;#include "ks0108_mmk.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Send GLCD Enable Pulse Signal.
;void        __GLCD_SEND_PULSE(void)
; 0001 000F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0010     _PORT_LCD_EN = 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0011     delay_us(5);
;PCODE: $00000011 VOL: 0
; 0001 0012     _PORT_LCD_EN = 0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0001 0013     delay_us(5);
;PCODE: $00000014 VOL: 0
; 0001 0014 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;// GLCD Display On/Off.
;void        GLCD_Display(bool isOn)
; 0001 0018 {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0019     if(isOn)
;PCODE: $00000019 VOL: 0
;	isOn -> Y+0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 001A     {
; 0001 001B         _PORT_LCD_CS1 = 0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 001C         _PORT_LCD_CS2 = 0;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 001D         _PORT_LCD_DI_RS = 0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 001E         _PORT_LCD_RW = 0;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 001F 
; 0001 0020         _PORT_LCD_DATA_WRITE = 0x3F;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0021 
; 0001 0022         __GLCD_SEND_PULSE();
;PCODE: $00000027 VOL: 0
; 0001 0023     }
; 0001 0024     else
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 0025     {
; 0001 0026         _PORT_LCD_CS1 = 1;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0001 0027         _PORT_LCD_CS2 = 1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0001 0028         _PORT_LCD_DI_RS = 0;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0001 0029         _PORT_LCD_RW = 0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0001 002A 
; 0001 002B         _PORT_LCD_DATA_WRITE = 0x3E;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 002C 
; 0001 002D         __GLCD_SEND_PULSE();
;PCODE: $00000034 VOL: 0
; 0001 002E     }
;PCODE: $00000035 VOL: 0
; 0001 002F }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;// GLCD Set Start Line.
;void        GLCD_SetStartLine(uint16_t lineNum)
; 0001 0033 {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0034     _PORT_LCD_DI_RS = 0;
;PCODE: $0000003B VOL: 0
;	lineNum -> Y+0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0035     _PORT_LCD_RW = 0;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 0036     _PORT_LCD_CS1 = 0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 0037     _PORT_LCD_CS2 = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 0038 
; 0001 0039     _PORT_LCD_DATA_WRITE = 0xC0 | lineNum;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 003A 
; 0001 003B     __GLCD_SEND_PULSE();
;PCODE: $00000047 VOL: 0
; 0001 003C }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;// GLCD Set Column.
;void        GLCD_SetColumn(unsigned int x)
; 0001 0040 {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0041     uint16_t colData;
; 0001 0042 
; 0001 0043     _PORT_LCD_DI_RS = 0;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;	x -> Y+2
;	colData -> R16,R17
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 0044     _PORT_LCD_RW = 0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0045 
; 0001 0046     if(x < 64)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0047     {
; 0001 0048         _PORT_LCD_CS1 = 1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0049         _PORT_LCD_CS2 = 0;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 004A         colData = x;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 004B     }
; 0001 004C     else
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0001 004D     {
; 0001 004E        _PORT_LCD_CS1 = 0;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 004F        _PORT_LCD_CS2 = 1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0050        colData = x - 64;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0001 0051     }
;PCODE: $00000066 VOL: 0
; 0001 0052 
; 0001 0053     colData = (colData | 0x40) & 0x7F;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0001 0054 
; 0001 0055     _PORT_LCD_DATA_WRITE = colData;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0001 0056 
; 0001 0057     __GLCD_SEND_PULSE();
;PCODE: $0000006D VOL: 0
; 0001 0058 }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;
;// GLCD Set Row.
;void        GLCD_SetRow(unsigned int y)
; 0001 005C {
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0001 005D     uint16_t rowData;
; 0001 005E 
; 0001 005F     _PORT_LCD_DI_RS = 0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;	y -> Y+2
;	rowData -> R16,R17
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0001 0060     _PORT_LCD_RW = 0;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0001 0061 
; 0001 0062     rowData = (y | 0xB8 ) & 0xBF;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0001 0063 
; 0001 0064     _PORT_LCD_DATA_WRITE =  rowData;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0001 0065 
; 0001 0066     __GLCD_SEND_PULSE();
;PCODE: $00000084 VOL: 0
; 0001 0067 }
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;
;// GLCD Go To (X, Y).
;void        GLCD_GoToXY(unsigned int x, unsigned int y)
; 0001 006B {
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0001 006C     GLCD_SetColumn(x);
;PCODE: $0000008E VOL: 0
;	x -> Y+2
;	y -> Y+0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0001 006D     GLCD_SetRow(y);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0001 006E }
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;
;// GLCD Write.
;void        GLCD_Write(uint16_t data)
; 0001 0072 {
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0001 0073     _PORT_LCD_DI_RS = 1;
;PCODE: $00000098 VOL: 0
;	data -> Y+0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0001 0074     _PORT_LCD_RW = 0;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0001 0075 
; 0001 0076     _PORT_LCD_DATA_WRITE = data;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0001 0077 
; 0001 0078     delay_us(1);
;PCODE: $0000009F VOL: 0
; 0001 0079     __GLCD_SEND_PULSE();
;PCODE: $000000A0 VOL: 0
; 0001 007A }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;
;// GLCD Read.
;uint16_t    GLCD_Read(uint16_t colNum)
; 0001 007E {
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0001 007F     uint16_t readData = 0;
; 0001 0080     _DDR_LCD_DATA = 0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;	colNum -> Y+2
;	readData -> R16,R17
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0001 0081 
; 0001 0082     _PORT_LCD_DI_RS = 1;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0001 0083     _PORT_LCD_RW = 1;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 0084 
; 0001 0085     _PORT_LCD_CS1 = (colNum <= 63);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0001 0086     _PORT_LCD_CS2 = !_PORT_LCD_CS1;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0001 0087     delay_us(1);
;PCODE: $000000C7 VOL: 0
; 0001 0088 
; 0001 0089     _PORT_LCD_EN = 1;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0001 008A     delay_us(1);
;PCODE: $000000CA VOL: 0
; 0001 008B 
; 0001 008C     // DUMMY READ.
; 0001 008D     _PORT_LCD_EN = 0;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0001 008E     delay_us(5);
;PCODE: $000000CD VOL: 0
; 0001 008F     _PORT_LCD_EN = 1;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0001 0090     delay_us(1);
;PCODE: $000000D0 VOL: 0
; 0001 0091 
; 0001 0092     // Read input data now.
; 0001 0093     readData = _PIN_LCD_DATA_READ;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0001 0094 
; 0001 0095     _PORT_LCD_EN = 0;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0001 0096     delay_us(1);
;PCODE: $000000D6 VOL: 0
; 0001 0097 
; 0001 0098     _DDR_LCD_DATA = 0xFF;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0001 0099 
; 0001 009A     return readData;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 009B }
;PCODE: $000000E0 VOL: 0
;
;// GLCD Clear Line.
;void        GLCD_ClearLine(uint16_t lineNum)
; 0001 009F {
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0001 00A0     int i;
; 0001 00A1 
; 0001 00A2     GLCD_GoToXY(0, lineNum);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;	lineNum -> Y+2
;	i -> R16,R17
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0001 00A3     //GLCD_GoToXY(0, 64); // TODO
; 0001 00A4 
; 0001 00A5     //_PORT_LCD_CS1 = 1;
; 0001 00A6     //_PORT_LCD_CS2 = 0;
; 0001 00A7 
; 0001 00A8     for(i = 0; i < 128; i++)
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0001 00A9         GLCD_Write(0);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0001 00AB GLCD_GoToXY(64, lineNum);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0001 00AC     for(i = 0; i < 128; i++)
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0001 00AD         GLCD_Write(0);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0001 00AE }
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;
;// GLCD Clear Screen.
;void        GLCD_Clear(void)
; 0001 00B2 {
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0001 00B3     int m;
; 0001 00B4     for(m = 0; m < 8; m++)
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;	m -> R16,R17
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0001 00B5         GLCD_ClearLine(m);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0001 00B6 }
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;
;// GLCD Draw Pixel.
;void        GLCD_DrawPixel(uint16_t x, uint16_t y, uint16_t col)
; 0001 00BA {
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0001 00BB     uint16_t colData;
; 0001 00BC     GLCD_GoToXY(x, (y / 8));
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;	x -> Y+6
;	y -> Y+4
;	col -> Y+2
;	colData -> R16,R17
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0001 00BD 
; 0001 00BE     switch(col)
;PCODE: $00000139 VOL: 0
; 0001 00BF     {
; 0001 00C0         case 0:
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0001 00C1             colData = ~(1<<(y%8)) & GLCD_Read(x);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0001 00C2             break;
;PCODE: $00000147 VOL: 0
; 0001 00C3 
; 0001 00C4         case 1:
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0001 00C5             colData = (1<<(y%8)) | GLCD_Read(x);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0001 00C6             break;
;PCODE: $00000155 VOL: 0
; 0001 00C7     }
;PCODE: $00000156 VOL: 0
; 0001 00C8 
; 0001 00C9     GLCD_GoToXY(x, (y / 8));
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0001 00CA     GLCD_Write(colData);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0001 00CB }
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;
;// GLCD Initialization.
;void        GLCD_Init(void)
; 0001 00CF {
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0001 00D0     _DDR_LCD_DATA = 0xFF;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0001 00D1     _PORT_LCD_CS1 = 1;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0001 00D2     _PORT_LCD_CS2 = 1;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0001 00D3 
; 0001 00D4     _PORT_LCD_RESET = 1;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0001 00D5 
; 0001 00D6     GLCD_Display(true);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0001 00D7     GLCD_Clear();
;PCODE: $00000172 VOL: 0
; 0001 00D8     GLCD_SetStartLine(0);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0001 00D9 }
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
